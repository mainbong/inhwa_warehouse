#-*-coding:utf-8-*-

# 데이터 타입
'''
 프로그램은 데이터를 가공해 결과를 생성
 데이터 타입은 가공에 필요한 연산 구분 + 저장소 크기
 파이썬은 사용자 관점의 추상화된 데이터 표현 제공 (ex. 4조와 12조의 계산이 특별한 데이터타입필요 없이 그냥 이루어짐)
 파이썬 기본 타입은 숫자(정수, 실수, 복소수), 논리(Boolean), 시퀀스, 연관, 클래스
 구조체, 공용체는 지원하지 않음
'''

# 숫자와 논리타입
'''
 숫자 타입은 정수, 실수, 복소수로 구분
 정수 타입은 메모리가 허용하는 한도에서 매우 큰 정수 표현, 거의 무한에 가까움
 부호가 있는 정수 표현을 사용하므로 signed, unsigned 속성이 없음
 복소수 타입은 복소수 표현 ( 파이썬은 허수 표현에서 i 대신 j 사용, 10 + 4j )
 실수 타입은 배정도 실수 표현 ( double 대신 float 사용 )
 논리 타입은 논리 연산 결과 표현
'''

# 열거 타입
'''
 열거 타입은 가능한 값의 범위가 나열 형태로 정의되는 이름이 부여된 읽기 전용 상수 표현
 파이썬은 기본 타입으로 지원하지 않고 enum 모듈의 Enum 클래스로 지원
'''
from enum import Enum

class Color(Enum):
    red = 1
    green =  2
    blue = 4

print(Color.red.value)
print(Color.green.value)
print(Color.blue.value | Color.red.value)
# | 는 bit or 연산자
# Blue 는 100, red 는 001 즉 둘을 OR 하면 101 , 5가 된다.


# 컨테이너 타입
'''
 컬렉션의 일종인 컨테이너는 구조화된 저장소로 시퀀스와 연관으로 구분
 시퀀스는 배열과 같이 순서를 갖는 데이터 구조로 문자열, 리스트, 튜플로 구분
 문자열 타입은 문자열만 관리하는 추상 타입-> 균일 시퀀스
 연관은 고유한 키로 값의 저장 위치를 결정하며 딕셔너리(균일시간걸림)와 집합(중복허용않음)으로 구분
 컨테이너에 포함되는 대상을 요소라 하며 내장함수 len()으로 개수 파악
'''

#사용자 정의 타입
'''
 사용자 정의 타입은 클래스로 표현하며 객체지향 개념 지원 --> 클래스 멤버는 속성과 메소드로 구분
 파이썬은 정의한 클래스 자체도 하나의 객체
 실체화는 클래스 객체를 복제해 동일 타입의 새로운 객체를 만드는 행위 --> 인스턴스 객체
 인스턴스 객체는 자신만의 속성을 가질 수 있음 --> C언어의 구조체와 호환
'''

class Person:
    def __init__(self):
        self.name = None
        self.tel = None
        self.addr = None

one = Person()
two = Person()

one.name = "mi-jung"
one.tel = "01011112222"
two.name = "jung-mi"
two.tel = "01033334444"
